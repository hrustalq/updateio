/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/game-providers": {
    /** Get all game providers */
    get: operations["GameProvidersController_findAll"];
    /** Create a new game provider */
    post: operations["GameProvidersController_create"];
  };
  "/game-providers/{id}": {
    /** Get a game provider by id */
    get: operations["GameProvidersController_findOne"];
    /** Delete a game provider */
    delete: operations["GameProvidersController_remove"];
    /** Update a game provider */
    patch: operations["GameProvidersController_update"];
  };
  "/auth/me": {
    /** Get current user information */
    get: operations["AuthController_getCurrentUser"];
  };
  "/auth/refresh": {
    /** Refresh access token */
    post: operations["AuthController_refreshTokens"];
  };
  "/auth/login": {
    /** Login with email and password */
    post: operations["AuthController_login"];
  };
  "/auth/logout": {
    /** Logout current user */
    post: operations["AuthController_logout"];
  };
  "/auth/verify": {
    /** Verify access token */
    get: operations["AuthController_verify"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    GameProviderDto: {
      /**
       * @description Unique identifier
       * @example cl1234567890
       */
      id: string;
      /**
       * @description Game provider name
       * @example Steam
       */
      name: string;
      /**
       * @description Game provider description
       * @example Digital distribution platform for video games
       */
      description?: string;
      /**
       * @description URL to provider logo/image
       * @example https://example.com/steam-logo.png
       */
      imageUrl?: string;
      /**
       * Format: date-time
       * @description Creation timestamp
       * @example 2024-01-01T00:00:00.000Z
       */
      createdAt: string;
      /**
       * Format: date-time
       * @description Last update timestamp
       * @example 2024-01-01T00:00:00.000Z
       */
      updatedAt: string;
      /**
       * @description Related games count
       * @example {
       *   "games": 100
       * }
       */
      _count?: Record<string, never>;
    };
    CreateGameProviderDto: {
      /**
       * @description The name of the game provider
       * @example Steam
       */
      name: string;
      /**
       * @description Description of the game provider
       * @example Digital distribution platform for video games
       */
      description?: string;
      /**
       * @description URL to the provider logo/image
       * @example https://example.com/steam-logo.png
       */
      imageUrl?: string;
    };
    UpdateGameProviderDto: {
      /**
       * @description The name of the game provider
       * @example Steam
       */
      name?: string;
      /**
       * @description Description of the game provider
       * @example Digital distribution platform for video games
       */
      description?: string;
      /**
       * @description URL to the provider logo/image
       * @example https://example.com/steam-logo.png
       */
      imageUrl?: string;
    };
    UserResponseDto: {
      /**
       * @description The unique identifier of the user
       * @example 123e4567-e89b-12d3-a456-426614174000
       */
      id: string;
      /**
       * @description The Telegram ID of the user
       * @example 123456789
       */
      telegramId?: string;
      /**
       * @description The role of the user
       * @example USER
       * @enum {string}
       */
      role: "ADMIN" | "MODERATOR" | "USER" | "CLIENT";
    };
    JwtDto: {
      /** @description Access token */
      access_token: string;
      /** @description Access token expires in */
      expires_in: number;
      /** @description Issued at */
      issued_at: number;
    };
    LoginDto: {
      /**
       * @description User email address
       * @example user@example.com
       */
      email: string;
      /**
       * @description User password (min 6 characters)
       * @example password123
       */
      password: string;
    };
    MessageResponseDto: {
      /**
       * @description The message of the response
       * @example Success
       */
      message: string;
    };
    TokenVerificationDto: {
      /**
       * @description Token issued at timestamp (in seconds)
       * @example 1678901234
       */
      issued_at: number;
      /**
       * @description Token expiration timestamp (in seconds)
       * @example 1678904834
       */
      expires_in: number;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Get all game providers */
  GameProvidersController_findAll: {
    parameters: {
      query?: {
        /** @description Page number (starts from 1) */
        page?: number;
        /** @description Number of items per page */
        limit?: number;
        /** @description Sorting criteria (format: field:order,field2:order2) */
        sort?: string[];
      };
    };
    responses: {
      /** @description Successful response with metadata */
      200: {
        content: {
          "application/json": {
            data?: components["schemas"]["GameProviderDto"][];
            metadata?: {
              /**
               * Format: date-time
               * @example 2025-01-13T18:54:01.132Z
               */
              timestamp?: string;
              /** @example http://localhost:3000/api/v1/ */
              path?: string;
              /** @example 1 */
              version?: string;
              pagination?: {
                /**
                 * @description Total number of items
                 * @example 100
                 */
                total?: number;
                /**
                 * @description Current page number
                 * @example 1
                 */
                page?: number;
                /**
                 * @description Items per page
                 * @example 10
                 */
                limit?: number;
                /**
                 * @description Total number of pages
                 * @example 10
                 */
                totalPages?: number;
                /**
                 * @description Whether there is a previous page
                 * @example false
                 */
                hasPreviousPage?: boolean;
                /**
                 * @description Whether there is a next page
                 * @example true
                 */
                hasNextPage?: boolean;
              };
            };
          };
        };
      };
      /** @description Bad Request - Validation failed */
      400: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Unauthorized - Authentication failed */
      401: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Forbidden - Insufficient permissions */
      403: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Not Found - Resource not found */
      404: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
    };
  };
  /** Create a new game provider */
  GameProvidersController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateGameProviderDto"];
      };
    };
    responses: {
      /** @description Successful response with metadata */
      201: {
        content: {
          "application/json": {
            data?: components["schemas"]["GameProviderDto"];
            metadata?: {
              /**
               * Format: date-time
               * @example 2025-01-13T18:54:01.132Z
               */
              timestamp?: string;
              /** @example http://localhost:3000/api/v1/ */
              path?: string;
              /** @example 1 */
              version?: string;
            };
          };
        };
      };
      /** @description Bad Request - Validation failed */
      400: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Unauthorized - Authentication failed */
      401: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Forbidden - Insufficient permissions */
      403: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Not Found - Resource not found */
      404: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
    };
  };
  /** Get a game provider by id */
  GameProvidersController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful response with metadata */
      200: {
        content: {
          "application/json": {
            data?: components["schemas"]["GameProviderDto"];
            metadata?: {
              /**
               * Format: date-time
               * @example 2025-01-13T18:54:01.132Z
               */
              timestamp?: string;
              /** @example http://localhost:3000/api/v1/ */
              path?: string;
              /** @example 1 */
              version?: string;
            };
          };
        };
      };
      /** @description Bad Request - Validation failed */
      400: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Unauthorized - Authentication failed */
      401: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Forbidden - Insufficient permissions */
      403: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Not Found - Resource not found */
      404: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
    };
  };
  /** Delete a game provider */
  GameProvidersController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful response with metadata */
      200: {
        content: {
          "application/json": {
            data?: components["schemas"]["GameProviderDto"];
            metadata?: {
              /**
               * Format: date-time
               * @example 2025-01-13T18:54:01.133Z
               */
              timestamp?: string;
              /** @example http://localhost:3000/api/v1/ */
              path?: string;
              /** @example 1 */
              version?: string;
            };
          };
        };
      };
      /** @description Bad Request - Validation failed */
      400: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Unauthorized - Authentication failed */
      401: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Forbidden - Insufficient permissions */
      403: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Not Found - Resource not found */
      404: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
    };
  };
  /** Update a game provider */
  GameProvidersController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateGameProviderDto"];
      };
    };
    responses: {
      /** @description Successful response with metadata */
      200: {
        content: {
          "application/json": {
            data?: components["schemas"]["GameProviderDto"];
            metadata?: {
              /**
               * Format: date-time
               * @example 2025-01-13T18:54:01.132Z
               */
              timestamp?: string;
              /** @example http://localhost:3000/api/v1/ */
              path?: string;
              /** @example 1 */
              version?: string;
            };
          };
        };
      };
      /** @description Bad Request - Validation failed */
      400: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Unauthorized - Authentication failed */
      401: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Forbidden - Insufficient permissions */
      403: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Not Found - Resource not found */
      404: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
    };
  };
  /** Get current user information */
  AuthController_getCurrentUser: {
    responses: {
      /** @description Returns the current user information */
      200: {
        content: {
          "application/json": {
            data?: components["schemas"]["UserResponseDto"];
            metadata?: {
              /**
               * Format: date-time
               * @example 2025-01-13T18:54:01.063Z
               */
              timestamp?: string;
              /** @example http://localhost:3000/api/v1/me */
              path?: string;
              /** @example 1 */
              version?: string;
            };
          };
        };
      };
      /** @description Bad Request - Validation failed */
      400: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Unauthorized - Authentication failed */
      401: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Forbidden - Insufficient permissions */
      403: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Not Found - Resource not found */
      404: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
    };
  };
  /** Refresh access token */
  AuthController_refreshTokens: {
    responses: {
      /** @description Token refreshed successfully */
      201: {
        content: {
          "application/json": {
            data?: components["schemas"]["JwtDto"];
            metadata?: {
              /**
               * Format: date-time
               * @example 2025-01-13T18:54:01.063Z
               */
              timestamp?: string;
              /** @example http://localhost:3000/api/v1/refresh */
              path?: string;
              /** @example 1 */
              version?: string;
            };
          };
        };
      };
      /** @description Bad Request - Validation failed */
      400: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Unauthorized - Authentication failed */
      401: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Forbidden - Insufficient permissions */
      403: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Not Found - Resource not found */
      404: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
    };
  };
  /** Login with email and password */
  AuthController_login: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["LoginDto"];
      };
    };
    responses: {
      /** @description Successfully authenticated */
      201: {
        content: {
          "application/json": {
            data?: components["schemas"]["JwtDto"];
            metadata?: {
              /**
               * Format: date-time
               * @example 2025-01-13T18:54:01.064Z
               */
              timestamp?: string;
              /** @example http://localhost:3000/api/v1/login */
              path?: string;
              /** @example 1 */
              version?: string;
            };
          };
        };
      };
      /** @description Bad Request - Validation failed */
      400: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Unauthorized - Authentication failed */
      401: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Forbidden - Insufficient permissions */
      403: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Not Found - Resource not found */
      404: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
    };
  };
  /** Logout current user */
  AuthController_logout: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    responses: {
      /** @description Successfully logged out */
      200: {
        content: {
          "application/json": {
            data?: components["schemas"]["MessageResponseDto"];
            metadata?: {
              /**
               * Format: date-time
               * @example 2025-01-13T18:54:01.064Z
               */
              timestamp?: string;
              /** @example http://localhost:3000/api/v1/logout */
              path?: string;
              /** @example 1 */
              version?: string;
            };
          };
        };
      };
      /** @description Bad Request - Validation failed */
      400: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Unauthorized - Authentication failed */
      401: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Forbidden - Insufficient permissions */
      403: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Not Found - Resource not found */
      404: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
    };
  };
  /** Verify access token */
  AuthController_verify: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    responses: {
      /** @description Token verification result */
      200: {
        content: {
          "application/json": {
            data?: components["schemas"]["TokenVerificationDto"];
            metadata?: {
              /**
               * Format: date-time
               * @example 2025-01-13T18:54:01.064Z
               */
              timestamp?: string;
              /** @example http://localhost:3000/api/v1/verify */
              path?: string;
              /** @example 1 */
              version?: string;
            };
          };
        };
      };
      /** @description Bad Request - Validation failed */
      400: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Unauthorized - Authentication failed */
      401: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Forbidden - Insufficient permissions */
      403: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Not Found - Resource not found */
      404: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": {
            statusCode?: number;
            message?: string | string[];
            error?: string;
            /** Format: date-time */
            timestamp?: string;
            path?: string;
          };
        };
      };
    };
  };
}
